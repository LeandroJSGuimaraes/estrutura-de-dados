ESTRUTURA DE DADOS

1) Vetores e matrizes

Também chamados de “arrays”, são estruturas de dados simples que podem auxiliar quando há muitas variáveis do mesmo tipo em um algorítimo.

O vetor ou array uni-dimensional é uma variável que armazena várias variáveis do mesmo tipo.

O vetor é uma estrutura de dados indexada, que pode armazenar uma determinada quantidade de valores do mesmo tipo.

Matriz ou array multi-dimensional é um vetor de vetores. Uma matriz é um vetor que possui duas ou mais dimensões.

Um Registro é uma estrutura que fornece um formato especializado para armazenar informações em memória.

Enquanto Arrays nos permitem armazenar vários dados de um único tipo de dados, o recurso de Registro nos permite armazenar mais de um tipo dado.

Toda estrutura de registro tem um nome (ex: livro), e seus campos podem ser acessados por meio do uso do operador ponto “.”. Por exemplo, para acessar o preço de um livro, poderíamos utilizar a seguinte declaração: livro.preco

2) Listas, Pilhas e Filas

Listas: Estrutura de Dados do tipo Lista, armazena dados de um determinado tipo em uma ordem específica.

A diferença entre listas e arrays é a de que a lista possui tamanho ajustável, enquanto arrays possuem tamanho fixo.

Existem dois tipos de listas, ligadas e duplamente ligadas.

Lista ligada: na estrutura do tipo lista existem os nós onde cada um dos nós conhece o valor que está sendo armazenado em seu interior além de conhecer o elemento posterior a ele: por isso ela é chamada de “lista ligada”, pois os nós são amarrados com essa indicação de qual é o próximo nó. 

Lista duplamente ligada: constituem uma variação das listas ligadas. A grande diferença das listas duplamente ligadas para as listas ligadas, é que elas são bidirecionais. Vimos que, naturalmente, não conseguimos “andar para trás” em listas ligadas, pois os nós de uma lista ligada sabem somente quem é o próximo elemento. Nas listas duplamente ligadas, os nós sabem quem é o próximo elemento e também quem é o elemento anterior, o que permite a navegação reversa.

Pilhas: é uma estrutura de dados que serve como uma coleção de elementos, e permite o acesso a somente um item de dados armazenado. O acesso aos itens de uma pilha é restrito – somente um item pode ser lido ou removido por vez.

Existem dois tipos de pilhas, LIFO ou UEPS e FIFO ou PEPS.

A estrutura do tipo Pilha LIFO (Last in First Out) ou UEPS (Último que Entra Primeiro que Sai), apresente o seguinte critério: o primeiro elemento a ser retirado é o último que tiver sido inserido (o último que entra é o primeiro que sai).

A estrutura do tipo Pilha FIFO (First in First Out) ou PEPS (Primeiro que Entra Primeiro que Sai), apresenta o seguinte critério: o primeiro elemento a ser retirado é o primeiro que tiver sido inserido.

Filas: a estrutura do tipo Fila admite remoção de elementos e inserção de novos, sujeita à seguinte regra de operação: o elemento removido é o que está na estrutura há mais tempo, ou seja, o primeiro objeto inserido na fila é também o primeiro a ser removido seguindo o conceito FIFO.

3) Árvore, Tabela Hash e Grafos

Árvore: é uma estrutura de dados que organiza seus elementos de forma hierárquica, onde existe um elemento que fica no topo da árvore, chamado de raiz e existem os elementos subordinados a ele, que são chamados de nós ou folhas. Na computação a estrutura de árvore é representada de forma inversa.

Tabela Hash: também conhecida como tabela de dispersão ou espelhamento, é uma estrutura de dados especial, que associa chaves de pesquisa a valores. Uma tabela hash é uma generalização da ideia de array, porém utiliza uma função denominada Hashing para espalhar os elementos, fazendo com que os mesmos fiquem de forma não ordenada dentro do “array” que define a tabela.

A tabela hash permite a associação de “valores” à “chaves”. “Valores” é a posição ou índice onde o elemento se encontra. “Chave” é a parte da informação que compõe o elemento a ser manipulado.

Espalhar facilita a busca na estrutura de dados, pois a partir de uma chave podemos acessar de forma rápida uma posição do “array”.

Grafos: são estruturas que permitem programar a relação entre objetos. Os objetos por sua vez, são vértices ou “nós” do grafo. Os relacionamentos são arestas.
